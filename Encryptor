const fs = require('fs')

fs.writeFile('Output.txt', "", (err) => {
if (err) throw err;
})
a = Math.floor(Math.random() * (50 - 10) + 10);
 console.log("A=" + a)
b = Math.floor(Math.random() * (50 - 10) + 10);
c = Math.floor(Math.random() * (50 - 10) + 10);
d = Math.floor(Math.random() * (50 - 10) + 10);
e = Math.floor(Math.random() * (50 - 10) + 10);
f = Math.floor(Math.random() * (50 - 10) + 10);
g = Math.floor(Math.random() * (50 - 10) + 10);
h = Math.floor(Math.random() * (50 - 10) + 10);
i = Math.floor(Math.random() * (50 - 10) + 10);
j = Math.floor(Math.random() * (50 - 10) + 10);
k = Math.floor(Math.random() * (50 - 10) + 10);
l = Math.floor(Math.random() * (50 - 10) + 10);
m = Math.floor(Math.random() * (50 - 10) + 10);
n = Math.floor(Math.random() * (50 - 10) + 10);
o = Math.floor(Math.random() * (50 - 10) + 10);
p = Math.floor(Math.random() * (50 - 10) + 10);
q = Math.floor(Math.random() * (50 - 10) + 10);
r = Math.floor(Math.random() * (50 - 10) + 10);
s = Math.floor(Math.random() * (50 - 10) + 10);
t = Math.floor(Math.random() * (50 - 10) + 10);
u = Math.floor(Math.random() * (50 - 10) + 10);
v = Math.floor(Math.random() * (50 - 10) + 10);
w = Math.floor(Math.random() * (50 - 10) + 10);
x = Math.floor(Math.random() * (50 - 10) + 10);
y = Math.floor(Math.random() * (50 - 10) + 10);
z = Math.floor(Math.random() * (50 - 10) + 10);
sp = Math.floor(Math.random() * (50 - 10) + 10);
/////////////B
while (true) {
  
if (a === b) {           
        console.log("B=" + b) 
        b = Math.floor(Math.random() * (50 - 10) + 10);
       
   } 
else{
       console.log("B=" + b)
          break;
    }
}
console.log("B="+b)

///////C

while (true) {
  
if (a === c || b === c ) {            
        console.log("C=" + c)
        c = Math.floor(Math.random() * (50 - 10) + 10);
        
    } 
else{
       console.log("C=" + c)
          break;
    }
}
console.log("C="+ c)


///////D

while (true) {
  
if (a === d || b === d || c === d) {             
        console.log("D=" + d)
        d = Math.floor(Math.random() * (50 - 10) + 10);
       
    } 
else{
       console.log("D=" + d)
      break;
    }
}
console.log("D="+ d)

//////E

while (true) {
  if (a === e || b === e || c === e || d === e) {            
       console.log("E=" + e)
        e = Math.floor(Math.random() * (50 - 10) + 10);
    } 
else{
       console.log("E=" + e)
      break;
    }
}
console.log("E="+ e)


///////f

while (true) {
  if (a === f || b === f || c === f || d === f || e === f) {            
        console.log("F=" + f)
        f = Math.floor(Math.random() * (50 - 10) + 10);
       
    } 
else{
       console.log("F=" + f)
      break;
    }
}
console.log("F="+ f)


/////////G


while (true) {
  if (a === g || b === g || c === g || d === g || e === g || f === g) {            
        console.log("G=" + g)
        g = Math.floor(Math.random() * (50 - 10) + 10);
       
    } 
else{
       console.log("G=" + g)
      break;
    }
}
console.log("G="+ g)


/////////H


while (true) {
  if (a === h || b === h || c === h || d === h || e === h || f === h || g === h) {            
        console.log("H=" + h)
        h = Math.floor(Math.random() * (50 - 10) + 10);
       
    } 
else{
       console.log("H=" + h)
      break;
    }
}
console.log("H="+ h)


///////I

while (true) {
  if (a === i || b === i || c === i || d === i || e === i || f === i || g === i || h === i) {            
        console.log("I=" + i)
        i = Math.floor(Math.random() * (50 - 10) + 10);
       
    } 
else{
       console.log("I=" + i)
      break;
    }
}
console.log("I="+ i)


////////J

while (true) {
  if (a === j || b === j || c === j || d === j || e === j || f === j || g === j || h === j || i === j) {            
        console.log("J=" + j)
        j = Math.floor(Math.random() * (50 - 10) + 10);
       
    } 
else{
       console.log("J=" + j)
      break;
    }
}
console.log("J="+ j)



////////K

while (true) {
  if (a === k || b === k || c === k || d === k || e === k || f === k || g === k || h === k || i === k  || j === k) {            
        console.log("K=" + k)
        k = Math.floor(Math.random() * (50 - 10) + 10);
       
    } 
else{
       console.log("K=" + k)
      break;
    }
}
console.log("K="+ k)


////////L

while (true) {
  if (a === l || b === l || c === l || d === l || e === l || f === l || g === l || h === l || i === l  || j === l || k === l) {            
        console.log("L=" + l)
        l = Math.floor(Math.random() * (50 - 10) + 10);
       
    } 
else{
       console.log("L=" + l)
      break;
    }
}
console.log("L="+ l)


////////M

while (true) {
  if (a === m || b === m || c === m || d === m || e === m || f === m  || g === m || h === m || i === m  || j === m || k === m || l === m) {            
        console.log("M=" + m)
        m = Math.floor(Math.random() * (50 - 10) + 10);
       
    } 
else{
       console.log("M=" + m)
      break;
    }
}
console.log("M="+ m)




////////N

while (true) {
  if (a === n || b === n || c === n || d === n || e === n || f === n || g === n || h === n || i === n  || j === n || k === n ||l===n|| m===n) {            
        console.log("N=" + n)
        n = Math.floor(Math.random() * (50 - 10) + 10);
       
    } 
else{
       console.log("N=" + n)
      break;
    }
}
console.log("N="+ n)



////////O

while (true) {
  if (a === o || b === o || c === o || d === o || e === o || f === o || g === o || h === o || i === o  || j === o || k === o ||l===o|| m===o || n===o) {            
        console.log("O=" + o)
        o = Math.floor(Math.random() * (50 - 10) + 10);
       
    } 
else{
       console.log("O=" + o)
      break;
    }
}
console.log("O="+ o)


////////P

while (true) {
  if (a === p || b === p || c === p || d === p || e === p || f === p || g === p || h === p || i === p  || j === p || k === p || m===p || n===p || o===p) {            
        console.log("P=" + p)
        p = Math.floor(Math.random() * (50 - 10) + 10);
       
    } 
else{
       console.log("P=" + p)
      break;
    }
}
console.log("P="+ p)


////////Q

while (true) {
  if (a === q || b === q || c === q || d === q || e === q || f === q || g === q || h === q || i === q  || j === q || k === q || m===q || n===q || o===q || p==q) {            
        console.log("Q=" + q)
        q = Math.floor(Math.random() * (50 - 10) + 10);
       
    } 
else{
       console.log("Q=" + q)
      break;
    }
}
console.log("Q="+ q)


///////R

while (true) {
  if (a === r || b === r || c === r || d === r || e === r || f === r || g === r || h === r || i === r  || j === r || k === r ||l===r|| m===r || n===r || o===r || p===r || q===r) {            
        console.log("R=" + r)
        r = Math.floor(Math.random() * (50 - 10) + 10);
       
    } 
else{
       console.log("R=" + r)
      break;
    }
}
console.log("R="+ r)


///////S

while (true) {
  if (a === s || b === s || c === s || d === s || e === s || f === s || g === s || h === s || i === s  || j === s || k === s ||l===s|| m===s || n===s || o===s || p==s|| q==s || r==s) {            
        console.log("S=" + s)
        s = Math.floor(Math.random() * (50 - 10) + 10);
       
    } 
else{
       console.log("S=" + s)
      break;
    }
}
console.log("S="+ s)



///////T

while (true) {
  if (a === t || b === t || c === t || d === t || e === t || f === t || g === t || h === t || i === t  || j === t || k === t || m===t || n===t || o===t || p==t|| q==t ||r==t|| s==t) {            
      console.log("T=" + t)
        t = Math.floor(Math.random() * (50 - 10) + 10);
       
    } 
else{
       console.log("T=" + t)
      break;
    }
}
console.log("T="+ t)

////////////U

while (true) {
  if (a === u || b === u|| c === u || d === u || e === u || f === u || g === u || h === u || i === u  || j === u || k === u ||l=== u|| m===u || n===u || o===u || p==u|| q==u ||r==u|| s==u || t==u) {            
      console.log("U=" + u)
        u = Math.floor(Math.random() * (50 - 10) + 10);
       
    } 
else{
       console.log("U=" + u)
      break;
    }
}
console.log("U="+ u)

////////////V

while (true) {
  if (a === v || b === v|| c === v || d === v || e === v|| f === u || g === v || h === v || i === v  || j === v || k === v ||l==v|| m===v || n===v || o===v || p==v|| q==v ||r==v|| s==v || t==v || u==v) {            
      console.log("V=" + v)
        v = Math.floor(Math.random() * (50 - 10) + 10);
       
    } 
else{
       console.log("V=" + v)
      break;
    }
}
console.log("V="+ v)




////////////W

while (true) {
  if (a === w || b === w|| c === w || d === w || e === w|| f === w || g === w || h === w|| i === w  || j === w || k === w ||l===w|| m===w || n===w || o===w || p==w|| q==w ||r==w|| s==w || t==w || u==w || v === w ) {            
      console.log("W=" + w)
        w = Math.floor(Math.random() * (50 - 10) + 10);
       
    } 
else{
       console.log("W=" + w)
      break;
    }
}
console.log("W="+ w)


////////////X

while (true) {
  if (a === x || b === x|| c === x || d === x || e === x|| f === x || g === x || h === x|| i === x  || j === x || k === x ||l===x|| m===x || n===x || o===x || p==x|| q==x ||r==x|| s==x || t==x || u==x || v === x || w==x) {            
      console.log("X=" + x)
        x = Math.floor(Math.random() * (50 - 10) + 10);
       
    } 
else{
       console.log("X=" + x)
      break;
    }
}
console.log("X="+ x)



////////////Y

while (true) {
  if (a === y || b === y|| c === y || d === y || e === y|| f === y || g === y || h === y|| i === y  || j === y || k === y ||l===y|| m===y || n===y || o===y || p==y|| q==y ||r==y|| s==y || t==y || u==y || v === y || w==y || x==y) {            
      console.log("Y=" + y)
        y = Math.floor(Math.random() * (50 - 10) + 10);
       
    } 
else{
       console.log("Y=" + y)
      break;
    }
}
console.log("Y="+ y)



////////////Z

while (true) {
  if (a === z || b === z|| c === z || d === z || e === z|| f === z || g === z || h === z|| i === z  || j === z || k === z || l === z || m===z || n===z || o===z || p===z|| q===z ||r===z|| s===z || t===z || u===z || v === z || w===z || x===z || y==z) {            
      console.log("Z=" + z)
        z = Math.floor(Math.random() * (50 - 10) + 10);
       
    } 
else{
       console.log("Z=" + z)
      break;
    }


}
////////SPACE
while(true){
if (a === sp || b === sp|| c === sp || d === sp || e === sp|| f === sp || g === sp || h === sp|| i === sp  || j === sp || k === sp || l === sp || m===sp || n===sp || o===sp || p==sp|| q==sp ||r==sp|| s==sp || t==sp|| u==sp || v === sp || w==sp || x==sp || y==sp || z==sp) {            
      console.log("Space=" + sp)
        sp = Math.floor(Math.random() * (50 - 10) + 10);
       
    } 
else{
       console.log("Space=" + sp)
      break;
    }
console.log("Space="+ sp);
}
let final ="" ; 
fs.readFile('Input.txt', function  (err, data) {
  datarealdeal = data.toString()
  for (var iiii = 0; iiii < data.length; iiii++) {
datakindareal = datarealdeal.toUpperCase()
datareal = datakindareal.charAt(iiii);

console.log(final)
  if (datareal == "A"){
    datareal = a
    final = final.concat(a) 
    console.log(datareal)
    fs.writeFile('Output.txt', final, (err) => {
if (err) throw err;
})
    continue;
  }
  if (datareal == "B"){
    datareal = b
    final = final.concat(b)
    console.log(datareal)
    console.log(final)
    fs.writeFile('Output.txt', final, (err) => {
if (err) throw err;
})
    continue;
  }
  if (datareal == "C"){
    datareal = c
    final = final.concat(c)
    console.log(datareal)
    fs.writeFile('Output.txt', final, (err) => {
if (err) throw err;
})
    continue;
  }
  if (datareal == "D"){
    datareal = d
     final = final.concat(d)
    fs.writeFile('Output.txt', final, (err) => {
if (err) throw err;
})
    continue;
  }
  if (datareal == "E"){
    datareal = e
    final = final.concat(e)
    console.log(datareal)
    fs.writeFile('Output.txt', final, (err) => {
if (err) throw err;
})
    continue;
  }
  if (datareal == "F"){
    datareal = f
    final = final.concat(f)
    console.log(datareal)
    fs.writeFile('Output.txt', final, (err) => {
if (err) throw err;
})
    continue;
  }
  if (datareal == "G"){
    datareal = g
    final = final.concat(g)
    console.log(datareal)
    fs.writeFile('Output.txt', final, (err) => {
if (err) throw err;
})
    continue;
  }
  if (datareal == "H"){
    datareal = h
    final = final.concat(h)
    console.log(datareal)
    fs.writeFile('Output.txt', final, (err) => {
if (err) throw err;
})
    continue;
  }
  if (datareal == "I"){
    datareal = i
    final = final.concat(i)
    console.log(i)
    fs.writeFile('Output.txt', final, (err) => {
if (err) throw err;
})
    continue;
  }
  if (datareal == "J"){
    datareal = j
    final = final.concat(j)
    console.log(datareal)
    fs.writeFile('Output.txt', final, (err) => {
if (err) throw err;
})
    continue;
  }
  if (datareal == "K"){
    datareal = k
    final = final.concat(k)
    console.log(datareal)
    fs.writeFile('Output.txt', final, (err) => {
if (err) throw err;
})
    continue;
  }
  if (datareal == "L"){
    datareal = l
    final = final.concat(l)
    console.log(datareal)
    fs.writeFile('Output.txt', final, (err) => {
if (err) throw err;
})
    continue;
  }
  if (datareal == "M"){
    datareal = m
    final = final.concat(m)
    console.log(datareal)
    fs.writeFile('Output.txt', final, (err) => {
if (err) throw err;
})
    continue;
  }
  if (datareal == "N"){
    datareal = n
    final = final.concat(n)
    console.log(datareal)
    fs.writeFile('Output.txt', final, (err) => {
if (err) throw err;
})
    continue;
  }
  if (datareal == "O"){
    datareal = o
    final = final.concat(o)
    console.log(datareal)
    fs.writeFile('Output.txt', final, (err) => {
if (err) throw err;
})
    continue;
  }
  if (datareal == "P"){
    datareal = p
    final = final.concat(p)
    console.log(datareal)
    fs.writeFile('Output.txt', final, (err) => {
if (err) throw err;
})
    continue;
  }
  if (datareal == "Q"){
    datareal = q
    final = final.concat(q)
    console.log(datareal)
    fs.writeFile('Output.txt', final, (err) => {
if (err) throw err;
})
    continue;
  }
  if (datareal == "R"){
    datareal = r
    final = final.concat(r)
    console.log(datareal)
    fs.writeFile('Output.txt', final, (err) => {
if (err) throw err;
})
    continue;
  }
  if (datareal == "S"){
    datareal = s
    final = final.concat(s)
    console.log(datareal)
    fs.writeFile('Output.txt', final, (err) => {
if (err) throw err;
})
    continue;
  }
  if (datareal == "T"){
    datareal = t
    final = final.concat(t)
    console.log(datareal)
    fs.writeFile('Output.txt', final, (err) => {
if (err) throw err;
})
    continue;
  }
  if (datareal == "U"){
    datareal = u
    final = final.concat(u)
    console.log(datareal)
    fs.writeFile('Output.txt', final, (err) => {
if (err) throw err;
})
    continue;
  }
  if (datareal == "V"){
    datareal = v
    final = final.concat(v)
    console.log(datareal)
    fs.writeFile('Output.txt', final, (err) => {
if (err) throw err;
})
    continue;
  }
  if (datareal == "W"){
    datareal = w
    final = final.concat(w)
    console.log(datareal)
    fs.writeFile('Output.txt', final, (err) => {
if (err) throw err;
})
    continue;
  }
  if (datareal == "X"){
    datareal = x
    final = final.concat(x)
    console.log(datareal)
    fs.writeFile('Output.txt', final, (err) => {
if (err) throw err;
})
    continue;
  }
  if (datareal == "Y"){
    datareal = y
    final = final.concat(y)
    console.log(datareal)
    fs.writeFile('Output.txt', final, (err) => {
if (err) throw err;
})
    continue;
  }
  if (datareal == "Z"){
   datareal = z
   final = final.concat(z)
   console.log(datareal)
   fs.writeFile('Output.txt', final, (err) => {
if (err) throw err;
})
   continue;
   }
   if (datareal == " "){
   datareal = sp
   final = final.concat(sp)
   console.log(datareal)
 fs.writeFile('Output.txt', final, (err) => {
if (err) throw err;
})
   continue;
   }

}
 if (err) {
         return console.error(err);
}}
)

aa = a.toString()
bb = b.toString()
cc = c.toString()
dd = d.toString()
ee = e.toString()
ff = f.toString()
gg = g.toString()
hh = h.toString()
ii = i.toString()
jj = j.toString()
kk = k.toString()
ll = l.toString()
mm = m.toString()
nn = n.toString()
oo = o.toString()
pp = p.toString()
qq = q.toString()
rr = r.toString()
ss = s.toString()
tt = t.toString()
uu = u.toString()
vv = v.toString()
ww = w.toString()
xx = x.toString()
yy = y.toString()
zz = z.toString()
spsp = sp.toString()
finalfinal=final.toString()
console.log(aa+bb+cc+dd+ee+ff+gg+hh+ii+jj+kk+ll+mm+nn+oo+pp+qq+rr+ss+tt+uu+vv+ww+xx+yy+zz)

let output = aa+cc+bb+ff+dd+ee+jj+gg+ii+hh+kk+mm+nn+ll+rr+oo+qq+pp+tt+ww+vv+uu+ss+zz+yy+spsp+xx
fs.writeFile('DecryptKey.txt', output, (err) => {
if (err) throw err;
})
