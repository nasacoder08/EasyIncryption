const fs = require('fs')

fs.writeFile('Output.txt', "", (err) => {
    if (err) throw err;
})

//Use an array and a loop to generate the key
key = []
for (var i = 0; i < 27; i++) {
    var val;
    //generate a new `val` if it is not unique
    //https://www.w3schools.com/jsref/jsref_dowhile.asp
    do {
        val = Math.floor(Math.random() * 40 + 10);
    } while (key.includes(val));

    //val is unique, add to array
    key.push(val);
}

let final ="";
//find the number which represents the letter A (see below)
const A_CHARCODE = "A".charCodeAt(0);
fs.readFile('Input.txt', function (err, data) {
    //naming of variables is very important
    //use descriptive names
    var uppercase_data = data.toString().toUpperCase();
    for (var i = 0; i < data.length; i++) {
        
        //Because the key is now an array rather than a bunch of numbers
        //convert the character to a number. Each character in a string
        //is represented as a number under the hood, here we can access
        //that number and use it to find the correct place in the key array
        var current_char = datakindareal.charCodeAt(i);
        //Because the numbers representing each character are in order,
        //we can just subtract the letter A from the current letter
        //to get the index. In this code, index will be 0 when the letter is A
        //and 1 when the letter is B, etc.
        var index = current_char - A_CHARCODE;
        
        //Use the index we calculated to find the correct key val
        final = final.concat(key[index]); 

    }

    //Only write once at the end
    //more efficient
    fs.writeFile('Output.txt', final, (err) => {
        if (err) throw err;
    })
    if (err) {
        return console.error(err);
    }}
)

//Again, using a loop instead of copypasting code
var key_string = "";
for (var i = 0; i < key.length; i++) {
    key_string += key[i].toString();
}

fs.writeFile('DecryptKey.txt', key_string, (err) => {
    if (err) throw err;
})
